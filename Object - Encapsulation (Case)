#include<iostream>
using namespace std;
class Cube {
public:
	void setL(int l) {
		m_L = l;
	}
	int getL() {
		return m_L;
	}
	void setK(int k) {
		m_K = k;
	}
	int getK() {
		return m_K;
	}
	void setH(int h) {
		m_H = h;
	}
	int getH() {
		return m_H;
	}
	int calculateS() {
		return m_L * m_K * 6;
}
	int calculateV() {
		return m_H * m_K * m_L;
	}
	bool isSameByclass(Cube& c) {
		if (m_L == c.getH() && m_K == c.getK() && m_L == c.getL()) {
			return true;
		}
		return false;
	}

private:
	int m_L;
	int m_K;
	int m_H;
};
bool isSame(Cube& c1, Cube& c2) {
	if (c1.getH() == c2.getH() && c1.getK() == c2.getK() && c1.getL() == c2.getL()) {
		return true;
	}
	return false;
}
int main() {
	Cube c1,c2;
	c1.setH(10),c2.setH(10);
	c1.setK(10),c2.setK(10);
	c1.setL(10), c2.setL(10);
	cout << "c1的体积:" << c1.calculateV() << endl;
	cout << "c1的表面积：" << c1.calculateS() << endl;
	bool ret = isSame(c1, c2); {
		if (ret) {
			cout << "全局函数判断:c1,c2相等" << endl;
		}
		else {
			cout << "全局函数判断:c1,c2不相等" << endl;
		}
	}
	ret = c1.isSameByclass(c2); {
		if (ret) {
			cout << "成员函数判断:c1,c2相等" << endl;
		}
		else {
			cout << "成员函数判断:c1,c2不相等" << endl;
		}
	}
}
